/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsNumber,
  IsInt,
  IsOptional,
  IsString,
  ValidateNested,
} from "class-validator";
import { IsJSONValue } from "@app/custom-validators";
import { GraphQLJSON } from "graphql-type-json";
import { InputJsonValue } from "../../types";
import { BlockTransactionCreateNestedManyWithoutTransactionsInput } from "./BlockTransactionCreateNestedManyWithoutTransactionsInput";
import { Type } from "class-transformer";
import { AssetCreateNestedManyWithoutTransactionsInput } from "./AssetCreateNestedManyWithoutTransactionsInput";
import { AssetDescriptionCreateNestedManyWithoutTransactionsInput } from "./AssetDescriptionCreateNestedManyWithoutTransactionsInput";

@InputType()
class TransactionCreateInput {
  @ApiProperty({
    required: true,
    type: Number,
  })
  @IsNumber()
  @Field(() => Number)
  fee!: number;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  expiration?: number | null;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  hash!: string;

  @ApiProperty({
    required: true,
    type: Number,
  })
  @IsInt()
  @Field(() => Number)
  size!: number;

  @ApiProperty({
    required: true,
  })
  @IsJSONValue()
  @Field(() => GraphQLJSON)
  notes!: InputJsonValue;

  @ApiProperty({
    required: true,
  })
  @IsJSONValue()
  @Field(() => GraphQLJSON)
  spends!: InputJsonValue;

  @ApiProperty({
    required: true,
    type: Number,
  })
  @IsInt()
  @Field(() => Number)
  networkVersion!: number;

  @ApiProperty({
    required: false,
    type: () => BlockTransactionCreateNestedManyWithoutTransactionsInput,
  })
  @ValidateNested()
  @Type(() => BlockTransactionCreateNestedManyWithoutTransactionsInput)
  @IsOptional()
  @Field(() => BlockTransactionCreateNestedManyWithoutTransactionsInput, {
    nullable: true,
  })
  blocksTransactions?: BlockTransactionCreateNestedManyWithoutTransactionsInput;

  @ApiProperty({
    required: false,
    type: () => AssetCreateNestedManyWithoutTransactionsInput,
  })
  @ValidateNested()
  @Type(() => AssetCreateNestedManyWithoutTransactionsInput)
  @IsOptional()
  @Field(() => AssetCreateNestedManyWithoutTransactionsInput, {
    nullable: true,
  })
  createdAssets?: AssetCreateNestedManyWithoutTransactionsInput;

  @ApiProperty({
    required: false,
    type: () => AssetDescriptionCreateNestedManyWithoutTransactionsInput,
  })
  @ValidateNested()
  @Type(() => AssetDescriptionCreateNestedManyWithoutTransactionsInput)
  @IsOptional()
  @Field(() => AssetDescriptionCreateNestedManyWithoutTransactionsInput, {
    nullable: true,
  })
  assetDescriptions?: AssetDescriptionCreateNestedManyWithoutTransactionsInput;
}

export { TransactionCreateInput as TransactionCreateInput };
